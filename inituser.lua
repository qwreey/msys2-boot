-- read configurations
local this_username do
	local file,err = io.popen("C:\\Windows\\System32\\whoami.exe")
	if not file then error("failed to execute C:\\Windows\\System32\\whoami.exe\n"..err) end
	this_username = file:read("*a")
	file:close()
end
local config = {} do
	local file,err = io.open("boot/user.conf","r")
	if not file then error("/boot/user.conf not found\n"..err) end
	for line in file:lines() do
		if not line then break end
		local key,value = line:match("^ *([^:]+): *(.-) *$")
		if key and value and value ~= "" then
			config[key] = value
		end
	end
	file:close()
end

-- write nsswitch conf
do
	local file,err = io.open("etc/nsswitch.conf","w")
	if not file then
		error("failed to open etc/nsswitch.conf\n"..err)
	end
	file:write([[# Begin /etc/nsswitch.conf
# This file was automatically generated by /boot/inituser.lua
# If you want change user name, home directory or default shell
# Change values in /boot/user.conf

passwd: files # db
group: files # db

db_enum: files # cache builtin

db_home: /home/%U
db_shell: /usr/bin/bash
db_gecos: cygwin desc

# End /etc/nsswitch.conf
]])
	-- file:flush()
	file:close()
end

do -- write passwd
	local this_passwd do
		local file,err = io.popen("usr\\bin\\mkpasswd -l -u Administrator -c")
		if not file then error("failed to execute mkpasswd -c\n"..err) end
		this_passwd = file:read("*a")
		file:close()
	end

	-- parse output
	-- Username:Password:UID:GID:Info:Home:Shell
	local UID,GID,Info,Home,Shell,AdminUID,AdminGID,AdminInfo,AdminHome,AdminShell =
	this_passwd:match("[^:]+:[^:]+:([^:]+):([^:]+):([^:]+):([^:]+):([^:]+)[\r\n]+[^:]+:[^:]+:([^:]+):([^:]+):([^:]+):([^:]+):([^:]+)")

	-- create passwd file
	local file,err = io.open("etc/passwd","w")
	if not file then error("failed to open /etc/passwd\n"..err) end
	local buffer = {}

	-- format current user
	table.insert(buffer,("%s:%s:%s:%s:%s:%s:%s"):format(
		config.user or this_username,
		config.password or "*",
		UID,GID,Info,
		config.home or Home,
		config.shell or Shell
	))

	-- format Administrator
	if UID ~= AdminUID then
		table.insert(buffer,("%s:%s:%s:%s:%s:%s:%s"):format(
			config.admin_user or "root",
			config.admin_password or "*",
			AdminUID,AdminGID,AdminInfo,
			config.admin_home or Home,
			config.admin_shell or Shell
		))
	end

	file:write(table.concat(buffer,"\n"))
	-- file:flush()
	file:close()
end

do -- write group
	local this_group do
		local file,err = io.popen("usr\\bin\\mkgroup.exe -c -g Administrators")
		if not file then error("failed to execute mkgroup -c\n"..err) end
		this_group = file:read("*a")
		file:close()
	end

	local file,err = io.open("etc/group","w")
	if not file then error("failed to open /etc/group\n"..err) end
	file:write(this_group)
	-- file:flush()
	file:close()
end
